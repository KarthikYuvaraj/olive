
/* this file is generated by gen-animation-types.cs.  do not modify */

using System;
using System.Collections;
using System.ComponentModel;
using System.Reflection;
using System.Windows;
using System.Windows.Media;
using System.Windows.Markup;

namespace System.Windows.Media.Animation {


public class SplineVectorKeyFrame : VectorKeyFrame
{

	public static readonly DependencyProperty KeySplineProperty =
		DependencyProperty.Register ("KeySpline", typeof (KeySpline), typeof (SplineVectorKeyFrame));

	Vector value;
	KeyTime keyTime;

	public SplineVectorKeyFrame ()
	{
	}

	public SplineVectorKeyFrame (Vector value)
	{
		this.value = value;
		// XX keytime?
	}

	public SplineVectorKeyFrame (Vector value, KeyTime keyTime)
	{
		this.value = value;
		this.keyTime = keyTime;
	}

	public SplineVectorKeyFrame (Vector value, KeyTime keyTime, KeySpline keySpline)
	{
		this.value = value;
		this.keyTime = keyTime;
		KeySpline = keySpline;
	}

	public KeySpline KeySpline {
		get { return (KeySpline)GetValue (KeySplineProperty); }
		set { SetValue (KeySplineProperty, value); }
	}

	protected override Freezable CreateInstanceCore ()
	{
		return new SplineVectorKeyFrame ();
	}

	protected override Vector InterpolateValueCore (Vector baseValue, double keyFrameProgress)
	{
		double splineProgress = KeySpline.GetSplineProgress (keyFrameProgress);

		return new Vector (baseValue.X + (value.X - baseValue.X) * splineProgress, baseValue.Y + (value.Y - baseValue.Y) * splineProgress);;
	}
}


}
